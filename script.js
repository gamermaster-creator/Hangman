// 1. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
const gameBoard = document.querySelector('.game-board');
const movesSpan = document.querySelector('#moves');
const images = ['üçé', 'üçå', 'üçá', 'üçâ', 'üçì', 'üçí', 'üçç', 'ü•ù'];
const cardValues = [...images, ...images]; // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏†‡∏≤‡∏û‡∏•‡∏∞ 2 ‡πÉ‡∏ö

let flippedCards = []; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î 2 ‡πÉ‡∏ö
let matchedPairs = 0;
let moves = 0;

// 2. ‡∏™‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î (Shuffle)
cardValues.sort(() => 0.5 - Math.random());

// 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏•‡∏á‡πÉ‡∏ô HTML
cardValues.forEach(value => {
    const card = document.createElement('div');
    card.classList.add('card');
    card.dataset.value = value; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏ß‡πâ
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á element ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡πÉ‡∏ä‡πâ emoji ‡πÅ‡∏ó‡∏ô)
    const cardContent = document.createElement('div');
    cardContent.classList.add('card-content');
    cardContent.textContent = value;
    card.appendChild(cardContent);
    
    card.addEventListener('click', handleCardClick);
    gameBoard.appendChild(card);
});

// 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î
function handleCardClick(event) {
    const clickedCard = event.currentTarget;

    // ‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏¥‡∏ô 2 ‡πÉ‡∏ö
    if (flippedCards.length < 2 && !clickedCard.classList.contains('flipped')) {
        flipCard(clickedCard);
        flippedCards.push(clickedCard);

        if (flippedCards.length === 2) {
            checkForMatch();
        }
    }
}

// 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î
function flipCard(card) {
    card.classList.add('flipped');
}

// 6. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
function checkForMatch() {
    moves++;
    movesSpan.textContent = moves;

    const [card1, card2] = flippedCards;

    if (card1.dataset.value === card2.dataset.value) {
        // ‡∏ñ‡πâ‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
        matchedPairs++;
        flippedCards = []; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
        if (matchedPairs === images.length) {
            setTimeout(() => alert(`‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞‡πÉ‡∏ô ${moves} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á!`), 500);
        }
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡∏û‡∏•‡∏¥‡∏Å‡∏Å‡∏•‡∏±‡∏ö
        setTimeout(() => {
            card1.classList.remove('flipped');
            card2.classList.remove('flipped');
            flippedCards = []; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
        }, 1000); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏´‡πá‡∏ô
    }
}